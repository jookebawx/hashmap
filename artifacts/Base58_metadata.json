{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "data_",
						"type": "string"
					}
				],
				"name": "decodeFromString",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "data_",
						"type": "string"
					}
				],
				"name": "encodeFromString",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data_",
						"type": "bytes"
					},
					{
						"internalType": "bytes1",
						"name": "char_",
						"type": "bytes1"
					}
				],
				"name": "indexOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data_",
						"type": "bytes"
					},
					{
						"internalType": "uint256",
						"name": "start_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "end_",
						"type": "uint256"
					}
				],
				"name": "slice",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "storyicon@foxmail.com",
			"kind": "dev",
			"methods": {
				"decodeFromString(string)": {
					"params": {
						"data_": "data encoded with base58, passed in as string."
					},
					"returns": {
						"_0": "raw data, returned as bytes."
					}
				},
				"encodeFromString(string)": {
					"params": {
						"data_": "raw data, passed in as a string."
					},
					"returns": {
						"_0": "base58 encoded data_, returned as bytes."
					}
				},
				"indexOf(bytes,bytes1)": {
					"params": {
						"char_": "target byte.",
						"data_": "raw data, passed in as bytes."
					},
					"returns": {
						"_0": "index, and whether the search was successful."
					}
				},
				"slice(bytes,uint256,uint256)": {
					"params": {
						"data_": "raw data, passed in as bytes.",
						"end_": "end index.",
						"start_": "start index."
					},
					"returns": {
						"_0": "slice data"
					}
				}
			},
			"title": "Base58",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"decodeFromString(string)": {
					"notice": "decode is used to decode the given string in base58 standard."
				},
				"encodeFromString(string)": {
					"notice": "encodeFromString is used to encode the given string in base58 standard."
				},
				"indexOf(bytes,bytes1)": {
					"notice": "indexOf is used to find where char_ appears in data_."
				},
				"slice(bytes,uint256,uint256)": {
					"notice": "slice is used to slice the given byte, returns the bytes in the range of [start_, end_)"
				}
			},
			"notice": "This algorithm was migrated from github.com/mr-tron/base58 to solidity. Note that it is not yet optimized for gas, so it is recommended to use it only in the view/pure function.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Base58.sol": "Base58"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Base58.sol": {
			"keccak256": "0x81e76f394b02fad92d8ee6bff27c2efe347f377e5474346fddeda5c3f7d63492",
			"license": "MIT",
			"urls": [
				"bzz-raw://b8a07a74c712371128d25f3d90ee54a0cf5cf111f6f202527959702424338cad",
				"dweb:/ipfs/QmPDXEruLKrP5SpCSZRdTACZjFu79xwBZ7apeLPAawanYK"
			]
		}
	},
	"version": 1
}